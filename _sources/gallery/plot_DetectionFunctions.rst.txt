
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_DetectionFunctions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_DetectionFunctions.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_DetectionFunctions.py:


Detection Function Plotting 
===========================
This example shows how to visualise detection functions (curves), e.g. when 
working with diffraction stacking detection.

.. GENERATED FROM PYTHON SOURCE LINES 7-14

.. code-block:: Python

    import numpy as np
    import matplotlib.pyplot as plt
    from scipy.stats import norm
    from fracspy.visualisation.plotting_support import detection_curves
    from fracspy.detection.stacking import stalta









.. GENERATED FROM PYTHON SOURCE LINES 15-18

Create simple dataset
^^^^^^^^^^^^^^^^^^^^^
Here we generate a purely synthetic function which would look like a maximum stack function

.. GENERATED FROM PYTHON SOURCE LINES 18-47

.. code-block:: Python


    # Parameters
    dt = 0.004  # time step in seconds
    duration = 1.0  # total duration of the signal in seconds
    t = np.arange(0, duration, dt)  # time array

    # Gaussian function parameters: mean, standard deviation, maximum
    gaussian_params = [
        {"mean": 0.1, "std": 0.01, "height": 1},    # First peak
        {"mean": 0.5, "std": 0.01, "height": 0.3},  # Second peak
        {"mean": 0.8, "std": 0.01, "height": 0.9},  # Third peak
    ]

    # Create the signal with constant level of 1
    signal = np.zeros_like(t) + 1


    # Add each Gaussian peak to the signal
    for params in gaussian_params:
        gaussian = params["height"] * norm.pdf(t, params["mean"], params["std"])
        signal += gaussian

    # Generate random background noise between 0 and 5
    random_noise = np.random.uniform(0, 5, size=len(t))

    # Add the random background noise to the signal
    signal += random_noise









.. GENERATED FROM PYTHON SOURCE LINES 48-50

Plot the function
^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 50-54

.. code-block:: Python

    fig,axs = detection_curves(msf=signal,t=t,msflabel='Signal')

    #%




.. image-sg:: /gallery/images/sphx_glr_plot_DetectionFunctions_001.png
   :alt: plot DetectionFunctions
   :srcset: /gallery/images/sphx_glr_plot_DetectionFunctions_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-58

Get Short Term Average / Long Term Average (STA/LTA) 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Set parameters

.. GENERATED FROM PYTHON SOURCE LINES 58-72

.. code-block:: Python


    # Short time window
    stw = 0.05

    # Long time window
    ltw = 5*stw

    # Gap time window
    gtw = 1

    # Compute STA/LTA for the example signal
    slf,_,_ = stalta(tdf=signal, dt=dt, stw=stw, ltw=ltw, gtw=gtw)









.. GENERATED FROM PYTHON SOURCE LINES 73-75

Plot both the signal and the STA/LTA
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. GENERATED FROM PYTHON SOURCE LINES 75-79

.. code-block:: Python

    fig,axs = detection_curves(msf=signal,t=t,msflabel='Signal',slf=slf)






.. image-sg:: /gallery/images/sphx_glr_plot_DetectionFunctions_002.png
   :alt: plot DetectionFunctions
   :srcset: /gallery/images/sphx_glr_plot_DetectionFunctions_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.245 seconds)


.. _sphx_glr_download_gallery_plot_DetectionFunctions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_DetectionFunctions.ipynb <plot_DetectionFunctions.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_DetectionFunctions.py <plot_DetectionFunctions.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_DetectionFunctions.zip <plot_DetectionFunctions.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
