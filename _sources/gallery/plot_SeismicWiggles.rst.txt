
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_SeismicWiggles.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_SeismicWiggles.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_SeismicWiggles.py:


Seismic Wiggles Plotting 
========================
This example shows how to visualise seismic trace data as wiggles. It is useful when
working with data with a small number of traces. 

.. GENERATED FROM PYTHON SOURCE LINES 7-17

.. code-block:: Python

    import matplotlib.pyplot as plt
    import numpy as np
    import os 
    from fracspy.utils.sofiutils import read_seis
    from fracspy.visualisation.traceviz import wiggleplot, multiwiggleplot


    plt.close("all")
    np.random.seed(0)








.. GENERATED FROM PYTHON SOURCE LINES 18-21

Data Loading
^^^^^^^^^^^^
Load data previously modelled using SOFI3D finite difference package

.. GENERATED FROM PYTHON SOURCE LINES 21-45

.. code-block:: Python


    # Directory containing input data
    input_dir = '../data/pyfrac_SOFIModelling'

    # Load receiver geometry - required to know number of receivers
    recs_xzy = np.loadtxt(os.path.join(input_dir,'inputs',
                                       'griddedarray_xzy_20m.dat')).T
    nr = recs_xzy.shape[1]

    # Modelling parameters
    dt = 1e-3  # SOFI3D Time sampling rate

    # Load the 3 component seismic data
    expname = 'explosive_Homogeneous_griddedarray'
    vz = read_seis(os.path.join(input_dir, 'outputs',
                                'su', f'{expname}_vy.txt'),
                   nr=nr)
    vx = read_seis(os.path.join(input_dir, 'outputs',
                                'su', f'{expname}_vx.txt'),
                   nr=nr)
    vy = read_seis(os.path.join(input_dir, 'outputs',
                                'su', f'{expname}_vz.txt'),
                   nr=nr)








.. GENERATED FROM PYTHON SOURCE LINES 46-51

One-Component Wiggle Visualisation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Where there are a relatively small number of traces (<40), wiggle plots can be
particularly useful for identifying events. 
In this example we use:

.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: Python


    fig, ax = wiggleplot(vz[:10], dt=dt)




.. image-sg:: /gallery/images/sphx_glr_plot_SeismicWiggles_001.png
   :alt: plot SeismicWiggles
   :srcset: /gallery/images/sphx_glr_plot_SeismicWiggles_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-59

We can increase the number of traces, and the plot labels will adapt accordingly,
to ensure the labels don't overlap. As we increase the number of traces, it can
make sense to also increase the vertical length of the figure (using the figsize
arguement). 

.. GENERATED FROM PYTHON SOURCE LINES 59-65

.. code-block:: Python


    fig, ax = wiggleplot(vz[:40], 
                         dt=dt,
                         figsize=[12,10]
                         )




.. image-sg:: /gallery/images/sphx_glr_plot_SeismicWiggles_002.png
   :alt: plot SeismicWiggles
   :srcset: /gallery/images/sphx_glr_plot_SeismicWiggles_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 66-71

Multi-Component Wiggle Visualisation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
When working with 3 component data it can be very useful to overlay the different
components. In this scenario, the plots can get overloaded very quickly, so we 
would advise sticking to a maximum of 10 traces. 

.. GENERATED FROM PYTHON SOURCE LINES 71-77

.. code-block:: Python


    fig, ax = multiwiggleplot([vx[:10],vy[:10],vz[:10]], 
                              dt=dt,
                              norm_indiv=False,
                              figsize=[12,8]
                              )



.. image-sg:: /gallery/images/sphx_glr_plot_SeismicWiggles_003.png
   :alt: plot SeismicWiggles
   :srcset: /gallery/images/sphx_glr_plot_SeismicWiggles_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.156 seconds)


.. _sphx_glr_download_gallery_plot_SeismicWiggles.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_SeismicWiggles.ipynb <plot_SeismicWiggles.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_SeismicWiggles.py <plot_SeismicWiggles.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_SeismicWiggles.zip <plot_SeismicWiggles.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
