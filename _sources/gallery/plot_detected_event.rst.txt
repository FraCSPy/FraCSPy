
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_detected_event.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_detected_event.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_detected_event.py:


Load and Plot Detected Events Across Stations
========================================================

This script loads the results of associated detected seismic events saved in JSON format,
retrieves the corresponding data for each detected station, and plots examples of 4-second 
segments starting from the detected times.

Example Usage
-------------
To run this script, ensure that the output directory containing the associated detected 
events JSON file is correctly specified and populated with the necessary data.

.. GENERATED FROM PYTHON SOURCE LINES 14-28

.. code-block:: Python


    import json
    import os
    import glob
    import obspy
    import matplotlib.pyplot as plt
    import numpy as np
    import random  # Import the random module for random selection
    # For tracking time
    from time import time
    from datetime import datetime
    from obspy import read
    from obspy.clients.fdsn import Client
    from fracspy.visualisation.Plotting_Detected_Events import *







.. GENERATED FROM PYTHON SOURCE LINES 29-31

Read Event Data Paths                          
---------------------------                                                    

.. GENERATED FROM PYTHON SOURCE LINES 31-72

.. code-block:: Python



    # Define client
    client = Client("IRIS")
    # Starting time of the event #1
    t1 = obspy.UTCDateTime("2016-11-22T01:51:27") 
    # Add more time for inventory grabbing
    t2 = t1 + 5 
    print(f"Time range: {t1} - {t2}")

    station_list = [str(stationID) for stationID in range(1120,1130)]

    # Get inventory
    inventory = client.get_stations(network="5B", station="*",
                                    starttime=t1,
                                    endtime=t2)
    # Get station codes
    station_info = inventory.networks[0].stations
    station_codes = []
    for station in station_info:
        station_codes.append(station.code)

    tr_data = []
    start_time = time()
    i = 0
    for st_code in station_codes:
        if st_code in station_list:
            st = client.get_waveforms(network="5B", 
                                      station=st_code, 
                                      location="00",
                                      channel="DHZ", 
                                      starttime=t1, 
                                      endtime=t2)
            st = st.filter('bandpass', freqmin=1, freqmax=200, corners=4, zerophase=False)
            tr_data.append(st[0].data)
    end_time = time()
    print(f"Done! Loading time: {end_time - start_time} seconds")



    




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Time range: 2016-11-22T01:51:27.000000Z - 2016-11-22T01:51:32.000000Z
    Done! Loading time: 5.0516839027404785 seconds




.. GENERATED FROM PYTHON SOURCE LINES 73-76

Plot Detected Events                                 
---------------------------                                                    
Plot the data segments.       

.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: Python

    num_stations_to_plot = 6
    plot_station_data(tr_data, station_list, num_stations_to_plot)





.. image-sg:: /gallery/images/sphx_glr_plot_detected_event_001.png
   :alt: plot detected event
   :srcset: /gallery/images/sphx_glr_plot_detected_event_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.849 seconds)


.. _sphx_glr_download_gallery_plot_detected_event.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_detected_event.ipynb <plot_detected_event.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_detected_event.py <plot_detected_event.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_detected_event.zip <plot_detected_event.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
